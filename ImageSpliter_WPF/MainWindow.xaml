<Window x:Class="ImageSpliter_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageSpliter_WPF"
        xmlns:viewmodel="clr-namespace:ImageSpliter_WPF.ViewModel"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="MainWindow" Height="950" Width="500">
    <Window.DataContext>
        <viewmodel:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.75cm"/>
            <RowDefinition Height="3.7cm"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!-- Image Loader Grid -->
        <Grid Grid.Column="0"
              Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="2.2cm"/>
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding Url_TextBox_Text}"
                     Margin="4" 
                     Grid.Column="0" 
                     Grid.Row="0" />
            <Button Command="{Binding FindImage_Button_Click}" Content="Find Image"
                    Margin="4"  
                    Grid.Column="1" 
                    Grid.Row="0" />
        </Grid>
        <!-- Input Value Grid -->
        <Grid Margin="10 5 10 5" Grid.Column="0"
              Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="3cm"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Split Columns Count"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Grid.Column="0" Grid.Row="0"/>
            <!-- TODO : 0인 경우 Model에서 붉은색으로 경고주도록 하기 -->
            <TextBox Text="{Binding SplitColumnsCount_TextBox_Text, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"
                     Grid.Column="1" Grid.Row="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DisplayImage_Image_SettingUpdate, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Text="Split Rows Count"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Grid.Column="0" Grid.Row="1"/>
            <TextBox Text="{Binding SplitRowsCount_TextBox_Text, UpdateSourceTrigger=PropertyChanged}"
                     VerticalAlignment="Center"
                     Grid.Column="1" Grid.Row="1">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DisplayImage_Image_SettingUpdate, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <CheckBox IsChecked="{Binding HorizontalSize_CheckBox_IsChecked}"
                      Content="(Autosize) Horizontal Size"
                      VerticalAlignment="Center"
                      Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"
                      Grid.Column="0" Grid.Row="2"/>
            <!-- TODO : ReadOnly인 경우 회색같은 스타일로 적용해주기 -->
            <TextBox x:Name="HorizontalSize_TextBox" 
                     Text="{Binding HorizontalSize_TextBox_Text, UpdateSourceTrigger=PropertyChanged}"
                     VerticalAlignment="Center"
                     Grid.Column="1" Grid.Row="2">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DisplayImage_Image_SettingUpdate, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <CheckBox IsChecked="{Binding VerticalSize_CheckBox_IsChecked}"
                      Content="(Autosize) Vertical size"
                      VerticalAlignment="Center" 
                      Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"
                      Grid.Column="0" Grid.Row="3"/>
            <!-- TODO : ReadOnly인 경우 회색같은 스타일로 적용해주기 -->
            <TextBox x:Name="VerticalSize_TextBox"
                     Text="{Binding VerticalSize_TextBox_Text, UpdateSourceTrigger=PropertyChanged}" 
                     VerticalAlignment="Center"
                     Grid.Column="1" Grid.Row="3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DisplayImage_Image_SettingUpdate, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Text="Outer margin"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Grid.Column="0" Grid.Row="4"/>
            <!--Text="{Binding OtherMargin_TextBox_Text, UpdateSourceTrigger=PropertyChanged}" -->
            <TextBox Text="{Binding OuterMargin_TextBox_Text, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource, FallbackValue='0,0,0,0'}"
                     VerticalAlignment="Center"
                     Grid.Column="1" Grid.Row="4">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DisplayImage_Image_SettingUpdate, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Text="Internal margin"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Grid.Column="0" Grid.Row="5"/>
            <TextBox Text="{Binding InternalMargin_TextBox_Text, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource, FallbackValue='0,0,0,0'}"
                     VerticalAlignment="Center"
                     Grid.Column="1" Grid.Row="5">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DisplayImage_Image_SettingUpdate, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>

        <Grid Grid.Column="0" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.71cm"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal"
                        Margin="0 3"
                        Grid.Column="0" Grid.Row="0">
                <TextBlock Text="Image Stretch Mode : "/>
                <ComboBox Text="{Binding DisplayImageMode_ComboBox_Text}" 
                          ItemsSource="{Binding DisplayImageMode_ComboBox_ItemsSource}"
                          SelectedIndex="0"
                          Width="100" />
                <Button Command="{Binding Cut_Button_Click}" Content="Cut" 
                        Padding="20 0" 
                        Margin="5 0"/>

            </StackPanel>
            <Rectangle Fill="LightGray" Grid.Column="0" Grid.Row="1"></Rectangle>
            <Image Source="{Binding DisplayImage_Image_Source}"
                   Stretch="{Binding DisplayImageMode_ComboBox_Text}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Grid.Column="0" Grid.Row="1"/>
        </Grid>


    </Grid>
</Window>

